name: Create terraform var file.
on:
  pull_request:
    types:
      - closed
    branches:
      - 'landing'
jobs:
  hierarchy-marge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents : write
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
      with:
        ref: landing
    - uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs')
          const path = require('path');

          const templatePath = './terraform/environments/shared/template/input.json'
          const outputPath = './terraform/environments/shared/input.json'
          const dptDir = './hierarchy/departments'
          const prjDir = './hierarchy/projects'

          var template = JSON.parse(fs.readFileSync(templatePath,'utf8'))

          function addResourceToJson(inputDir,targetArry) {
            const files = fs.readdirSync(inputDir);

            for (const file of files) {
              const filePath = path.join(inputDir, file);
              const stat = fs.statSync(filePath);

              if (stat.isDirectory()) {
                addResourceToJson(filePath);
              } else {
                const j = JSON.parse(fs.readFileSync(filePath,'utf8'))
                targetArry.push(j)
              }
            }
          }

          console.log(template)
          addResourceToJson(dptDir,template.departments)
          addResourceToJson(prjDir,template.service_projects)
          console.log(template)

          fs.writeFileSync(outputPath, JSON.stringify(template, null, 2));

    - name: Git push & pull request
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        git add .
        git commit -m ":robot: Create input.json at `date --iso-8601=seconds`"
        git push
        gh pr create -B "main" -t "Create projects" -H "landing" -b "Review request for creating a new project."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
